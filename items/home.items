Group All
Group gAttic		"Attic"				<attic>		    (All) ["Location", "Attic"]
Group gSF		    "Second Floor"		<firstfloor>	(All) ["Location", "FirstFloor"]
Group gFF		    "First Floor"		<groundfloor>	(All) ["Location", "GroundFloor"]
Group gBsmt 		"Basement"			<cellar> 		(All) ["Location", "Basement"]
Group gGarage		"Garage"			<garage>		(All) ["Location", "Garage"]
Group Outdoor 		"Outdoor"			<garden>		(All) ["Location", "Outdoor"]
Group Weather 		"Weather"							(All)
Group Status 		"Status"							(All)

Group FF_Family 	"Family Room" 		<video>			(gFF) ["Location", "FamilyRoom"]
Group FF_Kitchen 	"Kitchen" 			<kitchen> 		(gFF) ["Location", "Kitchen"]
Group FF_Laundry	"Laundry Room"		<water>			(gFF) ["Location", "LaundryRoom"]
Group FF_Dining		"Dining Room"		<kitchen>		(gFF) ["Location", "DiningRoom"]
Group FF_Office		"Office"			<office>		(gFF) ["Location", "Office"]
Group FF_Powder 	"Powder" 			<bath> 			(gFF) ["Location", "Bathroom"]
Group FF_Foyer	 	"Foyer" 			<corridor> 		(gFF) ["Location", "Entry"]

Group SF_Bath 		"Bathroom" 			<bath> 			(gSF) ["Location", "Bathroom"]
Group SF_GuestBdrm 	"Guest Bedroom" 	<bedroom> 		(gSF) ["Location", "GuestRoom"]
Group SF_SpareBdrm	"Spare Bedroom"		<bedroom>		(gSF) ["Location", "Bedroom"]
Group SF_Child 		"Child's Room" 		<baby_1> 		(gSF) ["Location", "Bedroom"]
Group SF_Master 	"Master Bedroom" 	<bedroom> 		(gSF) ["Location", "Bedroom"]
Group SF_Ensuite	"Ensuite"			<bath>			(gSF) ["Location", "Bathroom"]
Group SF_Landing 	"Landing" 			<corridor> 		(gSF) ["Location", "Corridor"]

Group Shed		    "Shed"			    <greenhouse>	(Outdoor) ["Location", "Shed"]

Group LightingScenes "Lighting Scene"   <settings>      (Status)
Group LEDStrips      "LEDStrip Control" <settings>      (Status)
Group Configuration  "Configuration"	<settings>		(Status)
Group AstroTest		 "AstroTest"		<settings>		(Configuration)
 
Group HASP "Hasp Persist Items"
Group Sequencer "Sequencer Persist Items"

Group PowerMeters  "Power Meters"  ["Sensor"]

/* Equipment Groups */
Group:Switch:OR(ON, OFF)	Lights 			    "All Lights [(%d)]" 		(All)
Group:Switch:OR(ON, OFF)	NightLights   		"Night Lights [(%d)]"		(All)   { ga="Light" }
Group:Switch:OR(ON, OFF)	EveningLights		"Evening Lights [(%d)]"		(All)   { ga="Light" }
Group:Switch:OR(ON, OFF)	DownstairsLights	"Downstairs Lights [(%d)]"	(All)   { ga="Light" }
Group:Switch:OR(ON, OFF)	ChristmasLights 	"Christmas Lights [(%d)]"	(All)   { ga="Light" }

Group:Switch:OR(ON, OFF)	OutdoorLights		"Outdoor Lights [(%d)]"		(All, Lights, Outdoor) ["Lightbulb"]   { ga="Light" }
Group gFFFamilyLights   "Family Room Lights"    (Lights, FF_Family)     ["Lightbulb"]
Group gFFDiningLights   "Dining Room Lights"    (Lights, FF_Dining)     ["Lightbulb"]
Group gFFFoyerLights    "Foyer Lights"          (Lights, FF_Foyer)      ["Lightbulb"]
Group gFFPowderLights   "Powder Room Lights"    (Lights, FF_Powder)     ["Lightbulb"]
Group gFFKitchenLights  "Kitchen Lights"        (Lights, FF_Kitchen)    ["Lightbulb"]
Group gFFOfficeLights   "Office Lights"         (Lights, FF_Office)     ["Lightbulb"]
Group gSFLandingLights  "Landing Lights"        (Lights, SF_Landing)    ["Lightbulb"]
Group gSFMasterLights   "Master Lights"        (Lights, SF_Master)      ["Lightbulb"]
Group gSFGuestLights    "Guest Lights"        (Lights, SF_GuestBdrm)    ["Lightbulb"]
Group gSFSpareLights    "Spare Lights"        (Lights, SF_SpareBdrm)    ["Lightbulb"]

String Habpanel_Dashboard "Storage Item for Habpanel Dashboard Link"

Group TempSensors (All)
Group HumSensors (All)

/* Config Items */
Switch VacationMode					"Vacation Mode"	<vacation>	(Configuration)
Switch AwayMode						"Away Mode"			        (Configuration) {ga="Switch"}	
Switch Christmas					"Christmas Lights"			(Configuration)
Switch Light_FF_Family_Sconces_Dim	"Sconce Dimmer"				(Configuration)
Color Light_Motion_Color	        "Motion Light Color"        (Configuration)
Color Light_Kitchen_Strip_Color     "Kitchen Strip Color"       (Configuration)

/* Mobile Zwave Energy Meters */
Number:Power Energy_Mobile_1_W	"Meter 1 (Server Rack) Energy Usage (inst) [%.2f %unit%]"		<text>  (PowerMeters) ["Measurement", "Power"]	{unit="W", channel="zwave:device:99f97889:node10:meter_watts"}
Number:Energy Energy_Mobile_1_kWh	"Meter 1 (Server Rack) Energy Usage (total) [%.2f kWh]"	    <text>  (PowerMeters) ["Measurement", "Energy"]	{unit="kWh", channel="zwave:device:99f97889:node10:meter_kwh"}
Number:Power Energy_Mobile_2_W	"Meter 2 (Workbench) Energy Usage (inst) [%.2f %unit%]"		<text>	    (PowerMeters) ["Measurement", "Power"]  {unit="W", channel="zwave:device:99f97889:node11:meter_watts"}
Number:Energy Energy_Mobile_2_kWh	"Meter 2 (Workbench) Energy Usage (total) [%.2f kWh]"	<text>	    (PowerMeters) ["Measurement", "Energy"]  {unit="kWh", channel="zwave:device:99f97889:node11:meter_kwh"}

/* Astro */
DateTime Sunrise_Time 	"Sunrise [%1$tH:%1$tM]" (Status)				{channel="astro:sun:local:rise#start"}
DateTime Sunset_Time 	"Sunset [%1$tH:%1$tM]" 	(Status)				{channel="astro:sun:local:set#end"}
Switch is_Night "Night" (Configuration)
Number:Angle	 Sun_Elevation	"Sun Elevation [%.2f %unit%]"	<sun>	(Weather)	{unit="°", channel="astro:sun:local:position#elevation"}
Number:Angle	 Sun_Azimuth	"Sun Azimuth [%.2f %unit%]"	<sun>	(Weather)	{unit="°", channel="astro:sun:local:position#azimuth"}
Number:Time	 Sun_Duration	"Daylight Duration [%.1f min]"	<sun>	(Weather)	{unit="min", channel="astro:sun:local:daylight#duration"} 

/* MyQ */
String GarageDoorLeft 			"Garage Door Left [%s]" 	<garagedoor> 	(gGarage)	{ myq="1" }
Switch GarageDoorLeftSwitch 	"Garage Left [%s]" 				        	(gGarage)	{ myq="1", auto_update="false" }
String GarageDoorRight 			"Garage Door Right [%s]" 	<garagedoor> 	(gGarage)	{ myq="0" }
Switch GarageDoorRightSwitch 	"Garage Right [%s]" 			        	(gGarage)	{ myq="0", auto_update="false" }

/* Weather */
Number Weather_Humidex		"Humidex [SCALE(humidex.scale):%s]" 	        <smiley>		    (Weather)
Number:Temperature Weather_Temp_Max 	"Todays Maximum [%.1f %unit%]"		                <temperature_hot> {unit="°F"}
Number:Temperature Weather_Temp_Min 	"Todays Minimum [%.1f %unit%]"		                <temperature_cold> {unit="°F"}
DateTime Weather_LastUpdate	"Last Update [%1$ta %1$tR]"		                <clock>

/* NTP binding demo item */
DateTime	Date		"Date [%1$tA, %1$td.%1$tb.%1$tY]"	<calendar>	(Status)	{ channel="ntp:ntp:local:dateTime" }

/* SamsungTV */
Switch FF_Family_TV_Power "TV Power" (FF_Family) {channel="samsungtv:tv:08f0d182_0096_1000_bf66_bc1485247bc7:power"}
Switch FF_Family_TV_Mute "TV Mute" (FF_Family) {channel="samsungtv:tv:08f0d182_0096_1000_bf66_bc1485247bc7:mute"}
Dimmer FF_Family_TV_Volume "TV Volume" (FF_Family) {channel="samsungtv:tv:08f0d182_0096_1000_bf66_bc1485247bc7:volume"}

/* Thermostat */
Group gHVAC "Thermostat" ["Equipment", "HVAC"] { ga="Thermostat" [ useFahrenheit=true , thermostatModes="off=0,heatcool=3:2:1" ] }
Number:Temperature HVAC_HeatSetPoint "Heat Set [%.1f %unit%]" <temperature_hot> (gHVAC) ["Setpoint", "Temperature"] /*["homekit:TargetTemperature"]*/ {unit="°F", ga="thermostatTemperatureSetpointLow", channel="zwave:device:99f97889:node28:thermostat_setpoint_heating"}
Number:Temperature HVAC_CoolSetPoint "Cool Set [%.1f %unit%]" <temperature_cold> (gHVAC) ["Setpoint","Temperature"] /*["homekit:TargetTemperature"]*/ {unit="°F", ga="thermostatTemperatureSetpointHigh", channel="zwave:device:99f97889:node28:thermostat_setpoint_cooling"}
Number:Temperature Temperature_HVAC "Temperature [%.1f %unit%]" <temperature> (gHVAC,TempSensors,FF_Dining,Ambimate_Test) ["Measurement","Temperature"]/*["CurrentTemperature"]*/ {unit="°F", ga="thermostatTemperatureAmbient" , channel="zwave:device:99f97889:node28:sensor_temperature"}
Number:Dimensionless Humidity_HVAC "Humidity [%.1f %unit%]" <humidity> (gHVAC,HumSensors,FF_Dining,Ambimate_Test) ["Measurement","Humidity"]/*["CurrentHumidity"]*/ {unit="%", ga="thermostatHumidityAmbient" , channel="zwave:device:99f97889:node28:sensor_relhumidity2"}
Group gHVACStatus
Number HVAC_Mode "Mode" /* [MAP(thermostatMode.map)]"*/ <flow> (gHVAC,gHVACStatus)/*["homekit:TargetHeatingCoolingMode"]*/ ["Point", "Mode"] { ga="thermostatMode", channel="zwave:device:99f97889:node28:thermostat_mode" }
Number HVAC_Fan_Mode "Fan Mode [MAP(thermostatFanMode.map)]" <fan> (gHVACStatus) {channel="zwave:device:99f97889:node28:thermostat_fanmode" }
Number HVAC_Operating_State "Op State [MAP(thermostatOpState.map)]" <flow> (gHVACStatus) {channel="zwave:device:99f97889:node28:thermostat_state"}
Number HVAC_Fan_State "Fan State [MAP(thermostatFanState.map)]" <fan> (gHVACStatus) {channel="zwave:device:99f97889:node28:thermostat_fanstate"}
Number:Dimensionless HVAC_Battery "Battery State [%d %]" <battery> (gHVACStatus) {unit="%", channel="zwave:device:99f97889:node28:battery-level"}

/*ZwaveStats*/
/*
Group gZwaveStats
Number ZwaveStatsSOF "Number Start of Frames [%s]" (gZwaveStats) {channel="zwave:serial_zstick:99f97889:serial_sof" }
Number ZwaveStatsACK "Number of Acknowledgements [%s]" (gZwaveStats) {channel="zwave:serial_zstick:99f97889:serial_ack" }
Number ZwaveStatsCAN "Number of CAN [%s]" (gZwaveStats) {channel="zwave:serial_zstick:99f97889:serial_can" }
Number ZwaveStatsNAK "Number of NAK [%s]" (gZwaveStats) {channel="zwave:serial_zstick:99f97889:serial_nak" }
Number ZwaveStatsOOF "Number of OOF [%s]" (gZwaveStats) {channel="zwave:serial_zstick:99f97889:serial_oof" }
*/

/* MQTT ESP8266 Temp/Humidity Sensors */
Number:Temperature Temperature_Basement                 "Bsmt Temp [%.1f %unit%]"                <temperature> (gBsmt,TempSensors)  ["Measurement","Temperature"]                       {unit="°F", ga="TemperatureSensor"[useFahrenheit=true], roomHint="Basement", channel="mqtt:topic:Kube_Basement:temperature"} 
Number:Dimensionless Humidity_Basement                    "Bsmt Hum [%.1f %]"                <humidity> (gBsmt,HumSensors) ["Measurement","Humidity"]                                   {unit="%", ga="HumiditySensor", roomHint="Basement", channel="mqtt:topic:Kube_Basement:humidity"} 
Number:Temperature Temperature_MasterBedroom            "MBdrm Temp [%.1f %unit%]"               <temperature> (SF_Master,TempSensors) ["Measurement","Temperature"]                    {unit="°F", ga="TemperatureSensor"[useFahrenheit=true], roomHint="Master Bedroom", channel="mqtt:topic:Kube_MasterBedroom:temperature"}
Number:Dimensionless Humidity_MasterBedroom               "MBdrm Hum [%.1f %]"               <humidity> (SF_Master,HumSensors) ["Measurement","Humidity"]                               {unit="%", ga="HumiditySensor", roomHint="Master Bedroom", channel="mqtt:topic:Kube_MasterBedroom:humidity"}
Number:Temperature Temperature_Garage                   "Garage Temp [%.1f %unit%]"              <temperature> (gGarage,TempSensors) ["Measurement","Temperature"]                      {unit="°F", ga="TemperatureSensor"[useFahrenheit=true], roomHint="Garage", channel="mqtt:topic:Kube_Garage:temperature"}
Number:Dimensionless Humidity_Garage                      "Garage Hum [%.1f %]"              <humidity> (gGarage,HumSensors) ["Measurement","Humidity"]                                 {unit="%", ga="HumiditySensor", roomHint="Garage", channel="mqtt:topic:Kube_Garage:humidity"}
Number:Temperature Temperature_Shed                     "Shed Temp [%.1f %unit%]"                <temperature> (Shed,TempSensors) ["Measurement","Temperature"]                         {unit="°F", ga="TemperatureSensor"[useFahrenheit=true], roomHint="Shed", channel="mqtt:topic:Kube_Shed:temperature"}
Number:Dimensionless Humidity_Shed                        "Shed Hum [%.1f %]"                <humidity> (Shed,HumSensors) ["Measurement","Humidity"]                                    {unit="%", ga="HumiditySensor", roomHint="Shed", channel="mqtt:topic:Kube_Shed:humidity"}
Number:Temperature Temperature_MasterBedroomHisCloset   "MBdrm His Closet Temp [%.1f %unit%]"    <temperature> (SF_Master,TempSensors) ["Measurement","Temperature"]                    {unit="°F", ga="TemperatureSensor"[useFahrenheit=true], roomHint="Master Bedroom", channel="mqtt:topic:Kube_MasterBedHisCloset:temperature"}
Number:Dimensionless Humidity_MasterBedroomHisCloset      "MBdrm His Closet Hum [%.1f %]"    <humidity> (SF_Master,HumSensors) ["Measurement","Humidity"]                               {unit="%", ga="HumiditySensor", roomHint="Master Bedroom", channel="mqtt:topic:Kube_MasterBedHisCloset:humidity"}
Number:Temperature Temperature_Attic                    "Attic Temp [%.1f %unit%]"               <temperature> (gAttic,TempSensors) /*["Measurement","Temperature"]          */                 //  {mqtt="<[broker:home/Attic/temperature:state:default]"}
Number:Dimensionless Humidity_Attic                       "Attic Hum [%.1f %]"               <humidity> (gAttic,HumSensors) /* ["Measurement","Humidity"]                   */              //  {mqtt="<[broker:home/Attic/humidity:state:default]"}
Number:Temperature Temperature_Laundry                  "Laundry Temp [%.1f %unit%]"             <temperature> (FF_Laundry,TempSensors) ["Measurement","Temperature"]                   {unit="°F", ga="TemperatureSensor"[useFahrenheit=true], roomHint="Laundry", channel="mqtt:topic:Kube_Laundry:temperature"}
Number:Dimensionless Humidity_Laundry                     "Laundry Hum [%.1f %]"             <humidity> (FF_Laundry,HumSensors) ["Measurement","Humidity"]                              {unit="%", ga="HumiditySensor", roomHint="Laundry", channel="mqtt:topic:Kube_Laundry:humidity"}
Number:Temperature Temperature_Ensuite                  "Ensuite Temp [%.1f %unit%]"             <temperature> (SF_Ensuite,TempSensors) ["Measurement","Temperature"]                   {unit="°F", ga="TemperatureSensor"[useFahrenheit=true], roomHint="Ensuite", channel="mqtt:topic:Kube_Ensuite:temperature"} 
Number:Dimensionless Humidity_Ensuite                     "Ensuite Hum [%.1f %]"             <humidity> (SF_Ensuite,HumSensors) ["Measurement","Humidity"]                              {unit="%", ga="HumiditySensor", roomHint="Ensuite", channel="mqtt:topic:Kube_Ensuite:humidity"} 
Number:Temperature Temperature_Kitchen                  "Kitchen Temp [%.1f %unit%]"             <temperature> (FF_Kitchen,TempSensors) ["Measurement","Temperature"]                   {unit="°F", ga="TemperatureSensor"[useFahrenheit=true], roomHint="Kitchen", channel="mqtt:topic:Kube_Kitchen:temperature"}
Number:Dimensionless Humidity_Kitchen                     "Kitchen Hum [%.1f %]"             <humidity> (FF_Kitchen,HumSensors) ["Measurement","Humidity"]                              {unit="%", ga="HumiditySensor", roomHint="Kitchen", channel="mqtt:topic:Kube_Kitchen:humidity"}
Number:Temperature Temperature_Office                   "Office Temp [%.1f %unit%]"              <temperature> (FF_Office,TempSensors) ["Measurement","Temperature"]                    {unit="°F", ga="TemperatureSensor"[useFahrenheit=true], roomHint="Office", channel="mqtt:topic:Kube_Office:temperature"} 
Number:Dimensionless Humidity_Office                      "Office Hum [%.1f %]"              <humidity> (FF_Office,HumSensors) ["Measurement","Humidity"]                               {unit="%", ga="HumiditySensor", roomHint="Office", channel="mqtt:topic:Kube_Office:humidity"}
Number:Temperature Temperature_Family                   "Family Temp [%.1f %unit%]"              <temperature> (FF_Family,TempSensors) ["Measurement","Temperature"]                    {unit="°F", ga="TemperatureSensor"[useFahrenheit=true], roomHint="Family room", channel="mqtt:topic:Kube_Family:temperature"}
Number:Dimensionless Humidity_Family                      "Family Hum [%.1f %]"              <humidity> (FF_Family,HumSensors) ["Measurement","Humidity"]                               {unit="%", ga="HumiditySensor", roomHint="Family room", channel="mqtt:topic:Kube_Family:humidity"}
Number:Temperature Temperature_Guest                    "Guest Temp [%.1f %unit%]"               <temperature> (SF_GuestBdrm,TempSensors) /* ["Measurement","Temperature"]   */                  //  {mqtt="<[broker:home/Guest/temperature:state:default]"}
Number:Dimensionless Humidity_Guest                       "Guest Hum [%.1f %]"               <humidity> (SF_GuestBdrm,HumSensors) /* ["Measurement","Humidity"]  */                          // {mqtt="<[broker:home/Guest/humidity:state:default]"}

/* MQTT ESP8266 Motion Sensors */
Number Motion_MasterBedroom "Master Motion [%d]" //{mqtt="<[broker:/Kube-MasterBedroom/Motion/Switch:state:default]", expire="2m,0" }
Switch Motion_Master_Disable "Disable Motion Sensor" (SF_Master)

Group AmbiMate_Test "AmbiMate Test"
//Number AmbiMate_Temp "AmbiMate Temp Test [%f]" (AmbiMate_Test) {mqtt="<[broker:/ESP_Easy/AmbimateMS4/Temperature:state:default]" }
//Number AmbiMate_Humidity "AmbiMate Humidity Test [%f]" (AmbiMate_Test) {mqtt="<[broker:/ESP_Easy/AmbimateMS4/Humidity:state:default]" }
//Number AmbiMate_Light "AmbiMate Light Test [%d]" (AmbiMate_Test) {mqtt="<[broker:/ESP_Easy/AmbimateMS4/Light:state:default]" }
//Number AmbiMate_Motion "AmbiMate Motion Test [%d]" (AmbiMate_Test) {mqtt="<[broker:/ESP_Easy/AmbimateMS4/Motion:state:default]"}//, expire="10s,0" }


/* MQTT Tasmota Devices */
Switch Sonoff_S31_1 "Christmas Tree [%s]" (FF_Family,ChristmasLights) ["PowerOutlet"] {ga="Outlet", channel="mqtt:topic:SonoffS31_ChristmasTreeLights:switch"} //{mqtt=">[broker:cmnd/ChristmasTree/power:command:*:default]],<[broker:stat/ChristmasTree/POWER:state:default]"}
Number:Power Sonoff_S31_1_Power "Christmas Tree Power Usage [%d %unit%]" (FF_Family,PowerMeters) ["Measurement", "Power"] {unit="W", channel="mqtt:topic:SonoffS31_ChristmasTreeLights:powerLoad"} // {mqtt="<[broker:tele/ChristmasTree/SENSOR:state:JSONPATH($.ENERGY.Power)]"}
Switch ChristmasTree_Master "Christmas Tree Master [%s]" (SF_Master,ChristmasLights) ["PowerOutlet"] {ga="Outlet", channel="mqtt:topic:SonoffS31_ChristmasTreeMasterLights:switch"} 
Number:Power ChristmasTree_Master_Power "Christmas Tree Master Power Usage [%d %unit%]" (SF_Master,PowerMeters) ["Measurement", "Power"] {unit="W", channel="mqtt:topic:SonoffS31_ChristmasTreeMasterLights:powerLoad"} 
Switch ChristmasTree_Midlanding "Christmas Tree Midlanding [%s]" (SF_Landing,ChristmasLights) ["PowerOutlet"] {ga="Outlet", channel="mqtt:topic:SonoffS31_ChristmasTreeMidlandingLights:switch"} 
Number:Power ChristmasTree_Midlanding_Power "Christmas Tree Midlanding Power Usage [%d %unit%]" (SF_Landing,PowerMeters) ["Measurement", "Power"] {unit="W", channel="mqtt:topic:SonoffS31_ChristmasTreeMidlandingLights:powerLoad"} 
Switch ChristmasTree_Landing "Christmas Tree Landing [%s]" (SF_Landing,ChristmasLights) ["PowerOutlet"] {ga="Outlet", channel="mqtt:topic:SonoffS31_ChristmasTreeLandingLights:switch"} 
Number:Power ChristmasTree_Landing_Power "Christmas Tree Landing Power Usage [%d %unit%]" (SF_Landing,PowerMeters) ["Measurement", "Power"] {unit="W", channel="mqtt:topic:SonoffS31_ChristmasTreeLandingLights:powerLoad"} 
Switch ChristmasTree_Kitchen "Christmas Tree Kitchen [%s]" (FF_Kitchen,ChristmasLights) ["PowerOutlet"] {ga="Outlet", channel="mqtt:topic:SonoffS31_ChristmasTreeKitchenLights:switch"} 
Number:Power ChristmasTree_Kitchen_Power "Christmas Tree Kitchen Power Usage [%d %unit%]" (FF_Kitchen,PowerMeters) ["Measurement", "Power"] {unit="W", channel="mqtt:topic:SonoffS31_ChristmasTreeKitchenLights:powerLoad"} 
Switch ChristmasTree_Ceramic "Christmas Tree Ceramic [%s]" (FF_Kitchen,ChristmasLights) ["PowerOutlet"] {ga="Outlet", channel="mqtt:topic:SonoffS31_ChristmasTreeCeramicLights:switch"} 
Number:Power ChristmasTree_Ceramic_Power "Christmas Tree Ceramic Power Usage [%d %unit%]" (FF_Kitchen,PowerMeters) ["Measurement", "Power"] {unit="W", channel="mqtt:topic:SonoffS31_ChristmasTreeCeramicLights:powerLoad"} 
Switch Prusai3_mk0 "3d Printer (Red) [%s]" (gBsmt) ["PowerOutlet"] {ga="Outlet", channel="mqtt:topic:SonoffS31_3DPrinterRed:switch"} 
Number:Power Prusai3_mk0_Power "3d Printer (Red) Power Usage [%d %unit%]" (gBsmt,PowerMeters) ["Measurement", "Power"] {unit="W", channel="mqtt:topic:SonoffS31_3DPrinterRed:powerLoad"} 
Switch Prusai3_mk2S "3d Printer (Black) [%s]" (gBsmt) ["PowerOutlet"] {ga="Outlet", channel="mqtt:topic:SonoffS31_3DPrinterBlack:switch"}
Number:Power Prusai3_mk2S_Power "3d Printer (Black) Power Usage [%d %unit%]" (gBsmt,PowerMeters) ["Measurement", "Power"] {unit="W", channel="mqtt:topic:SonoffS31_3DPrinterBlack:powerLoad"}

Number:Power FF_Foyer_Lamp_Power "Foyer Lamp Power Usage [%d %unit%]" (PowerMeters) ["Measurement", "Power"] {unit="W", channel="mqtt:topic:SonoffS31_FFFoyerLamp:powerLoad"}

/* Astro Test */
DateTime Astro_mornnightstart 	"Astro Morn Night Start [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:morningNight#start"}
DateTime Astro_mornnightend 	"Astro Morn Night End [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:morningNight#end"}
DateTime Astro_astrodawnstart 	"Astro AstroDawn Start [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:astroDawn#start"}
DateTime Astro_astrodawnend 	"Astro AstroDawn End [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:astroDawn#end"}
DateTime Astro_nauticdawnstart 	"Astro NauticDawn Start [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:nauticDawn#start"}
DateTime Astro_nauticdawnend 	"Astro NauticDawn End [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:nauticDawn#end"}
DateTime Astro_civildawnstart 	"Astro CivilDawn Start [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:civilDawn#start"}
DateTime Astro_civildawnend 	"Astro CivilDawn End [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:civilDawn#end"}
DateTime Astro_risestart	    "Astro Rise Start [%1$tH:%1$tM]"	    (AstroTest)	{channel="astro:sun:local:rise#start"}
DateTime Astro_riseend		    "Astro Rise End [%1$tH:%1$tM]"		    (AstroTest)	{channel="astro:sun:local:rise#end"}
DateTime Astro_daylightstart 	"Astro Daylight Start [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:daylight#start"}
DateTime Astro_noonstart 	    "Astro Noon Start [%1$tH:%1$tM]" 	    (AstroTest)	{channel="astro:sun:local:noon#start"}
DateTime Astro_noonend 		    "Astro Noon End [%1$tH:%1$tM]" 		    (AstroTest)	{channel="astro:sun:local:noon#end"}
DateTime Astro_daylightend 	    "Astro Daylight End [%1$tH:%1$tM]" 	    (AstroTest)	{channel="astro:sun:local:daylight#end"}
DateTime Astro_setstart 	    "Astro Set Start [%1$tH:%1$tM]" 	    (AstroTest)	{channel="astro:sun:local:set#start"}
DateTime Astro_setend 		    "Astro Set End [%1$tH:%1$tM]" 		    (AstroTest)	{channel="astro:sun:local:set#end"}
DateTime Astro_civilduskstart 	"Astro CivilDusk Start [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:civilDusk#start"}
DateTime Astro_civilduskend 	"Astro CivilDusk End [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:civilDusk#end"}
DateTime Astro_nauticduskstart 	"Astro NauticDusk Start [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:nauticDusk#start"}
DateTime Astro_nauticduskend 	"Astro NauticDusk End [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:nauticDusk#end"}
DateTime Astro_astroduskstart 	"Astro AstroDusk Start [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:astroDusk#start"}
DateTime Astro_astroduskend 	"Astro AstroDusk End [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:astroDusk#end"}
DateTime Astro_nightstart 	    "Astro Night Start [%1$tH:%1$tM]" 	    (AstroTest)	{channel="astro:sun:local:night#start"}
DateTime Astro_evenightstart 	"Astro Eve Night Start [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:eveningNight#start"}
DateTime Astro_evenightend 	    "Astro Eve Night End [%1$tH:%1$tM]" 	(AstroTest)	{channel="astro:sun:local:eveningNight#end"}
DateTime Astro_nightend 	    "Astro Night End [%1$tH:%1$tM]" 	    (AstroTest)	{channel="astro:sun:local:night#end"}



Number:Temperature Temperature_BME280_4_Test                  "BME280-4 Test Temp [%.1f %unit5%]"             <temperature> (AmbiMate_Test)        {unit="°F"}                // {mqtt="<[broker:/Kube_BMETest_4/BME280/Temperature:state:default]"}
Number:Dimensionless Humidity_BME280_4_Test                     "BME280-4 Test Hum [%.1f %]"             <humidity> (AmbiMate_Test)             {unit="%"}                //  {mqtt="<[broker:/Kube_BMETest_4/BME280/Humidity:state:default]"}
Number:Pressure Pressure_BME280_4_Test                     "BME280-4 Test Press [%.1f]"             <pressure> (AmbiMate_Test)                  {unit="inHg"}             // {mqtt="<[broker:/Kube_BMETest_4/BME280/Pressure:state:default]"}
Number:Temperature Temperature_BME280_6_Test                  "BME280-6 Test Temp [%.1f %unit%]"             <temperature> (AmbiMate_Test)        {unit="°F"}                   // {mqtt="<[broker:/Kube_BMETest_6/BME/Temperature:state:default]"}
Number:Dimensionless Humidity_BME280_6_Test                     "BME280-6 Test Hum [%.1f %]"             <humidity> (AmbiMate_Test)              {unit="%"}               //  {mqtt="<[broker:/Kube_BMETest_6/BME/Humidity:state:default]"}
Number:Pressure Pressure_BME280_6_Test                     "BME280-6 Test Press [%.1f]"             <pressure> (AmbiMate_Test)                 {unit="inHg"}              // {mqtt="<[broker:/Kube_BMETest_6/BME/Pressure:state:default]"}
