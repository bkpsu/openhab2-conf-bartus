Thing mqtt:topic:LEDStrip_FF_Office_Window "Kube LED FF Office Window" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/FF_Office_Window/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/FF_Office_Window", 
                commandTopic="home/FF_Office_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/FF_Office_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_FF_Foyer_Window "Kube LED FF Foyer Window" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/FF_Foyer_Window/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/FF_Foyer_Window", 
                commandTopic="home/FF_Foyer_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/FF_Foyer_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_Outdoor_Front_Door "Kube LED Outdoor Front Door" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/Outdoor_Front_Door/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/Outdoor_Front_Door", 
                commandTopic="home/Outdoor_Front_Door/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/Outdoor_Front_Door/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_FF_Dining_Window "Kube LED FF Dining Window" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/FF_Dining_Window/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/FF_Dining_Window", 
                commandTopic="home/FF_Dining_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/FF_Dining_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_Outdoor_Garage_Window "Kube LED Outdoor Garage Window" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/Outdoor_Garage_Window/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/Outdoor_Garage_Window", 
                commandTopic="home/Outdoor_Garage_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/Outdoor_Garage_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_Outdoor_Garage_Tree "Kube LED Outdoor Garage Tree" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/Outdoor_Garage_Tree/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/Outdoor_Garage_Tree", 
                commandTopic="home/Outdoor_Garage_Tree/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/Outdoor_Garage_Tree/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_Outdoor_Garage_Door "Kube LED Outdoor Garage Door" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/Outdoor_Garage_Door/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/Outdoor_Garage_Door", 
                commandTopic="home/Outdoor_Garage_Door/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/Outdoor_Garage_Door/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_FF_Powder_Window "Kube LED FF Powder Window" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/FF_Powder_Window/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/FF_Powder_Window", 
                commandTopic="home/FF_Powder_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/FF_Powder_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_SF_Spare_Window "Kube LED SF Spare Window" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/SF_Spare_Window/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/SF_Spare_Window", 
                commandTopic="home/SF_Spare_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/SF_Spare_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_SF_Child_Window "Kube LED SF Child Window" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/SF_Child_Window/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/SF_Child_Window", 
                commandTopic="home/SF_Child_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/SF_Child_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_SF_Ensuite_Window "Kube LED SF Ensuite Window" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/SF_Ensuite_Window/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/SF_Ensuite_Window", 
                commandTopic="home/SF_Ensuite_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/SF_Ensuite_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_SF_Master_Window "Kube LED SF Master Window" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/SF_Master_Window/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/SF_Master_Window", 
                commandTopic="home/SF_Master_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/SF_Master_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_SF_Master_S1_Window "Kube LED SF Master S1 Window" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/SF_Master_S1_Window/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/SF_Master_S1_Window", 
                commandTopic="home/SF_Master_S1_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/SF_Master_S1_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_SF_Master_S2_Window "Kube LED SF Master S2 Window" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/SF_Master_S2_Window/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/SF_Master_S2_Window", 
                commandTopic="home/SF_Master_S2_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/SF_Master_S2_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_SF_Guest_S_Window "Kube LED SF Guest S Window" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/SF_Guest_S_Window/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/SF_Guest_S_Window", 
                commandTopic="home/SF_Guest_S_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/SF_Guest_S_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_SF_Guest_W_Window "Kube LED SF Guest W Window" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/SF_Guest_W_Window/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/SF_Guest_W_Window", 
                commandTopic="home/SF_Guest_W_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/SF_Guest_W_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_SF_GuestBath_Window "Kube LED SF GuestBath Window" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/SF_GuestBath_Window/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/SF_GuestBath_Window", 
                commandTopic="home/SF_GuestBath_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/SF_GuestBath_Window/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_Outdoor_Rear_Door "Kube LED Outdoor Rear Door" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/Outdoor_Rear_Door/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/Outdoor_Rear_Door", 
                commandTopic="home/Outdoor_Rear_Door/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/Outdoor_Rear_Door/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_Group1 "Kube LED Group 1 (Outdoor)" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/LEDStrip_Group1/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/LEDStrip_Group1", 
                commandTopic="home/LEDStrip_Group1/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/LEDStrip_Group1/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

//Group 2 (Kitchen)

Thing mqtt:topic:LEDStrip_FF_Kitchen_Cabinet_1 "Kube LED FF Kitchen Cabinet 1" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/FF_Kitchen_Cabinet_1/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/FF_Kitchen_Cabinet_1", 
                commandTopic="home/FF_Kitchen_Cabinet_1/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/FF_Kitchen_Cabinet_1/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_FF_Kitchen_Cabinet_2 "Kube LED FF Kitchen Cabinet 2" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/FF_Kitchen_Cabinet_2/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/FF_Kitchen_Cabinet_2", 
                commandTopic="home/FF_Kitchen_Cabinet_2/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/FF_Kitchen_Cabinet_2/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_FF_Kitchen_Cabinet_3 "Kube LED FF Kitchen Cabinet 3" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/FF_Kitchen_Cabinet_3/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/FF_Kitchen_Cabinet_3", 
                commandTopic="home/FF_Kitchen_Cabinet_3/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/FF_Kitchen_Cabinet_3/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  

Thing mqtt:topic:LEDStrip_Kitchen_Cabinet "Kube LED FF Kitchen Cabinet Group" (mqtt:broker:MQTTBroker) @ "LEDStrip" {
    Channels:
    Type string : setTopic "String Channel" [ 
                commandTopic="home/LEDStrip_Group2/set"                 
                ]
    Type switch : switch "Power" [    
                stateTopic="home/LEDStrip_Group2", 
                commandTopic="home/LEDStrip_Group2/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map",
                transformationPattern="JSONPATH:$.state",
                on="ON",
                off="OFF"          
            ]
    Type number : effect "Effect" [ 
                commandTopic="home/LEDStrip_Group2/set",
                transformationPatternOut="MAP:LEDStripEffectJSON.map"  
            ]
    }  
